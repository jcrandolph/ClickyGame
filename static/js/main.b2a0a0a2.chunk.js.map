{"version":3,"sources":["components/GameCard/GameCard.js","Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["GameCard","props","react_default","a","createElement","onClick","playGame","id","className","alt","name","src","image","Wrapper","children","Header","score","topScore","App","state","cards","clickedIds","_this","includes","setState","alert","push","length","console","log","i","j","Math","floor","random","_ref","_this2","this","Wrapper_Wrapper","Header_Header","map","card","GameCard_GameCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"gwDAoBeA,MAjBf,SAAkBC,GACd,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMJ,EAAMK,SAASL,EAAMM,KAAKC,UAAU,YACpDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,SAGrCV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,cAASH,EAAMS,eCNhBG,MAHf,SAAiBZ,GACb,OAAOC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWP,EAAMa,iBCK5BC,MAPf,SAAgBd,GACZ,OACAC,EAAAC,EAAAC,cAAA,MAAII,UAAU,UAAd,mBAAuCN,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,QAAMG,GAAG,QAAQC,UAAU,SAA3B,WAA4CP,EAAMe,MAAlD,KAChDd,EAAAC,EAAAC,cAAA,QAAMG,GAAG,WAAWC,UAAU,YAA9B,eAAsDP,EAAMgB,SAA5D,cC+DWC,6MA7DbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,SAAU,EACVI,WAAY,MAGdf,SAAW,SAAAC,GACT,IAAIc,EAAaC,EAAKH,MAAME,WAE5B,GAAIA,EAAWE,SAAShB,GAGtB,OAFAe,EAAKE,SAAS,CAAEH,WAAY,GAAIL,MAAO,SACvCS,MAAM,wBAON,GAFAJ,EAAWK,KAAKnB,GAEU,KAAtBc,EAAWM,OAGb,OAFAL,EAAKE,SAAS,CAAER,MAAO,GAAIK,WAAY,UACvCI,MAAM,YAKRH,EAAKE,SAAS,CAAEJ,QAAOC,aAAYL,MAAOK,EAAWM,SACrDC,QAAQC,IAAI,UAAYP,EAAKH,MAAMH,OACnCY,QAAQC,IAAI,cAAgBP,EAAKH,MAAMF,UAEvC,IAAK,IAAIa,EAAIV,EAAMO,OAAS,EAAGG,EAAI,EAAGA,IAAK,CACzC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADCK,EAElB,CAACf,EAAMW,GAAIX,EAAMU,IAAvCV,EAAMU,GAFkCK,EAAA,GAE9Bf,EAAMW,GAFwBI,EAAA,GAIvCb,EAAKH,MAAMH,OAASM,EAAKH,MAAMF,UACjCK,EAAKE,SAAS,CAAEP,SAAUK,EAAKH,MAAMH,iFAMlC,IAAAoB,EAAAC,KACP,OACEnC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,CAAQvB,MAAOqB,KAAKlB,MAAMH,MACxBC,SAAUoB,KAAKlB,MAAMF,WAEtBoB,KAAKlB,MAAMC,MAAMoB,IAAI,SAAAC,GAAI,OACxBvC,EAAAC,EAAAC,cAACsC,EAAD,CACEpC,SAAU8B,EAAK9B,SACfqC,IAAKF,EAAKlC,GACVA,GAAIkC,EAAKlC,GACTG,KAAM+B,EAAK/B,KACXE,MAAO6B,EAAK7B,kBAtDNgC,mBCDlBC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b2a0a0a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction GameCard(props) {\r\n    return (\r\n\r\n        <div onClick={() => props.playGame(props.id)} className='playGame'>\r\n            <div className=\"img-container\">\r\n                <img alt={props.name} src={props.image}\r\n                 />\r\n            </div>\r\n            <div className=\"content\">\r\n                <strong>{props.name}</strong></div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default GameCard;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n    return <div className=\"wrapper\">{props.children}</div>\r\n}\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\nfunction Header(props) {\r\n    return (\r\n    <h1 className=\"header\">The Clicky Game!<br></br><span id=\"score\" className=\"score\"> Score: {props.score} </span>\r\n    <span id=\"topScore\" className=\"topScore\"> Top Score: {props.topScore} </span></h1>\r\n        )\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\nimport GameCard from \"./components/GameCard/GameCard\";\nimport Wrapper from './Wrapper/Wrapper';\nimport Header from \"./components/Header/Header\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  state = {\n    cards,\n    score: 0,\n    topScore: 0,\n    clickedIds: []\n  };\n\n  playGame = id => {\n    let clickedIds = this.state.clickedIds;\n\n    if (clickedIds.includes(id)) {\n      this.setState({ clickedIds: [], score: 0 });\n      alert(\"YOU LOSE! TRY AGAIN!\")\n      return;\n    }\n\n    else {\n      clickedIds.push(id);\n\n      if (clickedIds.length === 12) {\n        this.setState({ score: 12, clickedIds: [] });\n        alert(\"YOU WIN!\");\n        return;\n      };\n\n\n      this.setState({ cards, clickedIds, score: clickedIds.length });\n      console.log(\"score: \" + this.state.score);\n      console.log(\"top score: \" + this.state.topScore);\n\n      for (let i = cards.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [cards[i], cards[j]] = [cards[j], cards[i]];\n      }\n      if (this.state.score >= this.state.topScore) {\n        this.setState({ topScore: this.state.score });\n        return;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score}\n          topScore={this.state.topScore} />\n\n        {this.state.cards.map(card => (\n          <GameCard\n            playGame={this.playGame}\n            key={card.id}\n            id={card.id}\n            name={card.name}\n            image={card.image}\n          />\n        ))}\n\n      </Wrapper>\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}